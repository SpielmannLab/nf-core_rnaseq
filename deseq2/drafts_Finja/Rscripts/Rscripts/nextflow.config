// global configurations
nextflow.enable.dsl=2

// Set a default location to circumvent warning of no initialized value
params {
    outdir = "/Users/sreenivasan/Desktop"
}

// profile dependendent configurations
conda {
    enabled = true
}
queue = "shortterm"
workDir = "$WORK/bulkrna_nextflow_workdir"
process {
    executor = 'slurm'
    scratch =  '$SCRATCH/' // has to be single quotes. Otherwise it gets expanded before creating a new slurm job
    //conda = "/Users/sreenivasan/miniforge3/envs/NICHES"
    conda = "$WORK/.omics/anaconda3/envs/rnaseq"
    withName: write_params {
        publishDir = [ path: "${params.outdir}",
                    mode: 'copy' ]
    }
    withName: building_dds_obj {
        publishDir = [ path: "${params.outdir}/building_dds_obj/",
                    mode: 'copy', overwrite: true ]
    }
    withName: group_comparison {
        publishDir = [ path: "${params.outdir}/group_comparison/", 
                    mode: 'copy', overwrite: true ]
    }
    withName: batch_correction {
        publishDir = [ path: "${params.outdir}/batch_correction/", 
                    mode: 'copy', overwrite: true ]
    }
    withName: shrink_LFC {
        publishDir = [ path: "${params.outdir}/shrink_LFC/",
                    mode: 'copy', overwrite: true ]
    }
    withName: detection_DEG {
        publishDir = [ path: "${params.outdir}/detection_DEG/",
                    mode: 'copy', overwrite: true ]
    }
    withName: perform_variance_stabilisation {
        publishDir = [ path: "${params.outdir}/variance_stabilisation/",
                    mode: 'copy', overwrite: true ]
    }
    withName: plot_PCA {
        publishDir = [ path: "${params.outdir}/PCA_plots/",
                    mode: 'copy', overwrite: true ]
    }
    withName: plot_counts {
        publishDir = [ path: "${params.outdir}/counts_plots/", 
                    mode: 'copy', overwrite: true ]
    }

}